<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.0.xsd">

	<bean id="assetServiceXML" class="rs.ac.uns.ftn.informatika.springapp.service.AssetServiceImplXML"></bean>
	
	<!-- setter based dependency injection
	name atribut mora odgovarati nazivu settera assetService bez reci set u klasi AssetControllerSetterDIXML -->
	<bean id="assetControllerSet" class="rs.ac.uns.ftn.informatika.springapp.controller.AssetControllerSetterDIXML">
		<!-- ref vrednost odgovara id-u assetServiceXML beana -->
		<property name="assetService" ref="assetServiceXML"></property>
	</bean>
	
	<!-- constructor based dependency injection -->
	<bean id="assetControllerConst" class="rs.ac.uns.ftn.informatika.springapp.controller.AssetControllerConstructorDIXML">
		<!-- alternativno je moguce dodati atribut ref="assetServiceXML" elementu constructor-arg umesto celog novog beana
		ako konstruktor ima vise parametara moguce ih je injektovati u redosledu kojim se
		pojavljuju u konstruktoru navodjenjem atributa index="0", index="1", itd. -->
		<constructor-arg>
			<bean class="rs.ac.uns.ftn.informatika.springapp.service.AssetServiceImplXML" />
		</constructor-arg>
	</bean>
	
	<!-- XML alternativa za @ComponentScan -->
	<!-- <context:component-scan base-package="rs.ac.uns.ftn.informatika.springapp" /> -->
</beans>